setwd("~/")
cd ~
()
setwd("~/Documents/Projects/Historical/20111215-From_Karen")
save.image("~/Documents/Projects/Historical/20111215-From_Karen/CPUE_Species.RData")
CPUE_Species
attach(CPUE_Species)
plot(Date~Alewives)
plot(Alewives~Date)
plot(Alewives~Date type="b")
plot(Alewives~Date, type="b")
plot(Alewives~Date, type="b")
plot(Alewives, Date, type="b")
plot(Date, Alewives, type="b")
plot(Date, Alewives, type="b")
CPUE_Species <- read.csv("~/Documents/Projects/Historical/20111215-From_Karen/CPUE_Species.csv")
View(CPUE_Species)
attach(CPUE_Species)
View(CPUE_Species)
plot(Alewives, Date, type="b")
plot(Date, Alewives, type="b")
plot(Date, Alewives, Bluefish, type="b")
plot(Date[,Alewives], Date[,Bluefish], type="b")
plot(Alewives, Date, type="b")
plot(Date, Alewives, type="b")
points(Date, Bluefish, type="b")
help(coplot)
plot(Alewives~Date, type="b")
coplot(Alewives~Date, type="b")
coplot(Date,[2,3] type="b")
plot(CPUE_Species)
plot.ts
help(plot.ts)
plot.ts(Date,Alewives)
plot.ts(Date,Alewives, type="b")
plot.ts(CPUE_Species, type="b")
plot.ts(Alewives, Bluefish, type="b")
plot.ts(date, Alewives, Bluefish, type="b")
plot.ts(Date, Alewives, Bluefish, type="b")
ts.plot(Date, Alewives, Bluefish, type="b")
help(ts.plot)
ts.plot(Alewives, Bluefish, Eels)
version
install.packages("mgcv")
library("mgcv", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages(c("boot", "class", "cluster", "forecast", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "RcppArmadillo", "rpart", "spatial"))
install.packages("SuppDists")
quit()
install.packages(c("forecast", "maps", "maptools", "MASS", "plotrix", "Rcpp", "RcppArmadillo", "sp"))
install.packages("glmnet")
library(glmnet)
load("QSExample.RData")
quit()
quit()
R
R()
R(version)
version
install.packages("RdbiPgSQL")
install.packages("Rdbi")
install.packages("Rdbi")
source("http://bioconductor.org/biocLite.R")
biocLite("RdbiPgSQL")
source("http://bioconductor.org/getBioC.R")
biocLite <<-
function(pkgs, groupName="lite", ...)
{
if (missing(pkgs))
biocinstall(groupName=groupName, ...)
else
biocinstall(pkgs=pkgs, groupName=groupName, ...)
}
install.packages("RODBC")
library(RODBC)
channel <- odbcConnectAccess("~/tmp/RAM-Legacy-v1.0.accdb")
channel <- odbcConnect("~/tmp/RAM-Legacy-v1.0.accdb")
warnings()
library(devtools)
install.packages("devtools")
install_github("ropensci/EML", build=FALSE)
library(devtools)
install_github("ropensci/EML", build=FALSE)
quit()
# https://github.com/ropensci/rfishbase/blob/master/inst/doc/rfishbase/rfishbase_github.md
source('~/Box Documents/Documents/Projects/OSS2014/Local/code/20140725_fishbase.R')
?updateCache
source('~/Box Documents/Documents/Projects/OSS2014/Local/sandbox/RAM_code_20140726.R')
timeseries_values_view.csv
cat("Please choose your timeseries_values_view.csv file \n")
source('~/Box Documents/Documents/Projects/OSS2014/Regional_Collapse/Rscripts/RAM_code.R')
cat("Please choose your taxanomy.csv file \n")
source('~/.active-rstudio-document')
warnings()
View(fish)
View(fish)
View(fishes)
View(reference)
View(taxa)
pwd
source('~/.active-rstudio-document')
taxa = read.csv2("taxanomy.csv",header=T, sep = ",", dec="."))
taxa = read.csv2("taxanomy.csv",header=T, sep = ",", dec=".")
taxa = read.csv2("taxanomy.csv",header=T, sep = ",", dec=".")
("~/OSS2014/Local/sandbox")
taxa = read.csv2("taxanomy.csv",header=T, sep = ",", dec=".")
source('~/Box Documents/Documents/Projects/OSS2014/Local/code/20140725_fishbase.R')
View(taxa)
taxa$COMMONNAME1
taxa$COMMONNAME1?gsub
?gsub
grep("tuna",taxa$COMMONNAME1)
grep("cod",taxa$COMMONNAME1)
cods<-subset(taxa, grepl("cod", COMMONNAME1))
View(cods)
View(taxa)
View(taxa)
?which_fish
cods$SCIENTIFICNAME
for codindex in length(cods){
cods$SCIENTIFICNAME[codindex]
}
for(codindex in 1:length(cods)){
cods$SCIENTIFICNAME[codindex]
}
cat(cods$SCIENTIFICNAME[codindex], "\n")
source('~/Box Documents/Documents/Projects/OSS2014/Local/code/20140725_fishbase.R')
cods$SCIENTIFICNAME
cods$SCIENTIFICNAME[1]
cods$SCIENTIFICNAME[,1]
cods$SCIENTIFICNAME[1]
View(cods)
source('~/Box Documents/Documents/Projects/OSS2014/Local/code/20140725_fishbase.R')
View(cods)
source('~/Box Documents/Documents/Projects/OSS2014/Local/code/20140725_fishbase.R')
cat(cods$SCIENTIFICNAME[codindex], "\n")
for(codindex in 1:9)){
cat(cods$SCIENTIFICNAME[codindex], "\n")
}
for(codindex in 1:9){
cat(cods$SCIENTIFICNAME[codindex], "\n")
}
cods$SCIENTIFICNAME[3]
cods$SCIENTIFICNAME
levels(cods)
dim(cods)
cods$SCIENTIFICNAME(1)
cods$SCIENTIFICNAME(2)
cods$SCIENTIFICNAME[3]
taxa$SCIENTIFICNAME[3]
cod_name<-cods$SCIENTIFICNAME[codindex]
View(cods)
cod_name <- "Gadus morhua"
cod_fb_data <- which_fish(cod_name)
cod_fb_data <- which_fish(cod_name, "ScientificName", fish.data)
fishbase
library("rfishbase")
data(fishbase) #create fish.data file from fishbase
cod_fb_data <- which_fish(cod_name, "ScientificName", fish.data)
cod_fb_data <- which_fish("Gadus morhua", "ScientificName", fish.data)
cods <- subset(taxa, grepl("cod", COMMONNAME1))
cod_name<-cods$SCIENTIFICNAME
View(cods)
cod_name<-c(cods$SCIENTIFICNAME)
View(cods)
which_fish("Gadiformes", "genus")
which_fish("Gadiformes", "Genus")
Gad <- which_fish("Gadiformes", "Genus")
Gad <- which_fish("Gadiformes", "Genus", fish.data)
fishbase
fish_names(fish.data[Gad])
fish.data[Gad]
Gad <- which_fish("Gadiformes", "Genus", fish.data)
Gad_names <- fish_names(fish.data[Gad])
fish.data[Gad]
str(cods)
View(cods)
cod_name<-cods$SCIENTIFICNAME
cods$SCIENTIFICNAME[1]
head(cods)
str(cods)
dim(cod)
dim(cods)
test1<-as.factor(cods$COMMONNAME1)
str(test1)
?subset
source('~/.active-rstudio-document', echo=TRUE)
newdata <- as.data.frame(cods)
View(newdata)
str(newdata)
cods <- subset(taxa, grepl("cod", COMMONNAME1))
str(cods)
cods <- droplevels(cods)
str(cods)
loadCache(".") #laod cached copy of fish.data from fishbase
loadCache("./fishdata_20140725.Rdata") #laod cached copy of fish.data from fishbase
library("rfishbase")
loadCache("./fishdata_20140725.Rdata") #laod cached copy of fish.data from fishbase
?loadcache
?loadCache
data(fishbase) #create fish.data file from fishbase
loadCache("./fishdata_20140725.Rdata") #laod cached copy of fish.data from fishbase
loadCache(".") #load cached copy of fish.data from fishbase
cd ../
library("rfishbase")
setwd("~/OSS2014/Local/sandbox")
#data(fishbase) #create fish.data file from fishbase
#updateCache(path = ".") #update fish.data
loadCache(".") #load cached copy of fish.data from fishbase
loadCache(".",TRUE)
data(fishbase) #create fish.data file from fishbase
loadCache(".",) #load cached copy of fish.data from fishbase
loadCache("20140725_fishbase.R") #load cached copy of fish.data from fishbase
setwd("~/OSS2014/Local/sandbox")
loadCache("20140725_fishbase.R") #load cached copy of fish.data from fishbase
loadCache("2014-07-25fishdata.Rdat") #load cached copy of fish.data from fishbase
dir()
loadCache("2014-07-25fishdata.Rdat") #load cached copy of fish.data from fishbase
loadCache(".") #load cached copy of fish.data from fishbase
cat("\n Loading taxonomy.csv file \n")
taxa = read.csv2("taxonomy.csv",header=T, sep = ",", dec=".")
str(taxa)
cat("\n taxonomy.csv file loaded \n")
cods <- subset(taxa, grepl("cod", COMMONNAME1))
str(cods)
cods <- droplevels(cods)
str(cods)
for(codindex in 1:9){
cod_name<-cods$SCIENTIFICNAME[codindex]
}
cod_name
cat("Current Cod is", cod_name, "\n")
cod_name<-droplevels(cods$SCIENTIFICNAME[codindex])
cat("Current Cod is", cod_name, "\n")
for(codindex in 1:length(cods)){
#for(codindex in 1:9){
cod_name<-droplevels(cods$SCIENTIFICNAME[codindex])
cat("Current Cod is", cod_name, "\n")
}
Gad <- which_fish("Gadiformes", "Genus", fish.data)
cod_fb_data <- which_fish(cod_name, using="ScientificName", fish.data)
out <- getLengthWeight(fish.data[Gad])
out <- getLengthWeight(fish.data[1:2])
out$Oreochromis_mossambicus
out_tmp<-as.data.frame(out$Oreochromis_mossambicus)
View(out_tmp)
library(devtools)
install_github("rfishbase", "ropensci")
library("rfishbase")
setwd("~/OSS2014/Regional_Collapse/sandbox")
data(fishbase) #create fish.data file from fishbase
loadCache("../datasets") #load cached copy of fish.data from fishbase
setwd(file.choose())
setwd("~/Regional_Collapse")
require(plyr);require(dplyr); require(reshape2)
########################
# load time series data
tms <- read.csv2(
file="./original_data/timeseries_values_view.csv",
header=T, sep = ",", dec=".",stringsAsFactors=F)
# load catch MSY data
cmsy_data <- read.csv2(
file="./CatchMSY/Output/CSV/RC_CMSY_Output.csv",
header=T, sep = ";", dec=".", stringsAsFactors=F)
# load biomass MSY data
bmsy_data <- read.csv(
file = "data_tables/stocks.csv", header=T, stringsAsFactors=F, sep = ",")
bmsy_data$X.1 <- NULL
bmsy_data$X <- NULL
# merge cmsy thresholds with bmsy
sub_cmsy <- select(cmsy_data, stock, median.msy.)
View(sub_cmsy)
View(cmsy_data)
#setwd("~/Regional_Collapse")
require(plyr);require(dplyr); require(reshape2)
########################
# load time series data
tms <- read.csv2(
file="./original_data/timeseries_values_view.csv",
header=T, sep = ",", dec=".",stringsAsFactors=F)
# load catch MSY data
cmsy_data <- read.csv2(
file="./CatchMSY/Output/CSV/RC_CMSY_Output.csv",
header=T, sep = ";", dec=".", stringsAsFactors=F)
# load biomass MSY data
bmsy_data <- read.csv(
file = "data_tables/stocks.csv", header=T, stringsAsFactors=F, sep = ",")
bmsy_data$X.1 <- NULL
bmsy_data$X <- NULL
# merge cmsy thresholds with bmsy
sub_cmsy <- select(cmsy_data, stock, median.msy.)
names(sub_cmsy) <- c("ASSESSID","C_msy")
sub_cmsy$C_msy <- sub_cmsy$C_msy* 100
merged_df <- merge(bmsy_data, sub_cmsy, by= "ASSESSID", all.x=TRUE, all.y=FALSE)
View(merged_df)
merged_df <- merge(bmsy_data, sub_cmsy, by= "ASSESSID", all.x=TRUE, all.y=FALSE)
# total number of stocks
num_stocks <- nrow(merged_df)
# make dataframe to record 0-1 for collapse, number of years collapsed
msy_collapse<- data.frame(matrix(NA, nrow=num_stocks, ncol=5))
colnames(msy_collapse)<-c(
"assessid", "if_collapse_cmsy","nyr_collapse_cmsy",
"if_collapse_bmsy", "nyr_collapse_bmsy")
msy_collapse$assessid <- unique(tms$ASSESSID)
View(merged_df)
View(merged_df)
source('~/Box Documents/Documents/Projects/OSS2014/Regional_Collapse/sandbox/cmsy_if_collapse.R')
source('~/Box Documents/Documents/Projects/OSS2014/Regional_Collapse/sandbox/cmsy_if_collapse.R')
View(merged_df)
View(bmsy_data)
View(cmsy_data)
5.000723e+01
5.000723e+01 *1000
5.000723e+03
View(cmsy_data)
head(select(cmsy_data, stock, median.msy.)
)
head(select(cmsy_data, stock, median.msy.))*1000
head(select(cmsy_data, stock, median.msy.)*1000)
head(select(cmsy_data, stock, median.msy.)$mediam.msy*1000)
head(select(cmsy_data, stock, median.msy.)$mediam.msy.*1000)
cmsy_data$median.msy.[1]*1000
5.000723e+03
head(sub_cmsy)
head(merged_df)
head(cmsy_data)
head(cmsy_data$median.msy.)
#setwd("~/Regional_Collapse")
require(plyr);require(dplyr); require(reshape2)
########################
# load time series data
tms <- read.csv2(
file="./original_data/timeseries_values_view.csv",
header=T, sep = ",", dec=".",stringsAsFactors=F)
# load catch MSY data
cmsy_data <- read.csv2(
file="./CatchMSY/Output/CSV/RC_CMSY_Output.csv",
header=T, sep = ";", dec=".", stringsAsFactors=F)
# load biomass MSY data
bmsy_data <- read.csv(
file = "data_tables/stocks.csv", header=T, stringsAsFactors=F, sep = ",")
bmsy_data$X.1 <- NULL
bmsy_data$X <- NULL
# merge cmsy thresholds with bmsy
sub_cmsy <- select(cmsy_data, stock, median.msy.)
# remove after ben re-runs
#sub_cmsy <- sub_cmsy[1:134,]
names(sub_cmsy) <- c("ASSESSID","C_msy")
sub_cmsy$C_msy <- sub_cmsy$C_msy* 1000
merged_df <- merge(bmsy_data, sub_cmsy, by= "ASSESSID", all.x=TRUE, all.y=FALSE)
head(sub_cmsy)
head(merged_df)
rm(list=ls())
#setwd("~/Regional_Collapse")
require(plyr);require(dplyr); require(reshape2)
########################
# load time series data
tms <- read.csv2(
file="./original_data/timeseries_values_view.csv",
header=T, sep = ",", dec=".",stringsAsFactors=F)
# load catch MSY data
cmsy_data <- read.csv2(
file="./CatchMSY/Output/CSV/RC_CMSY_Output.csv",
header=T, sep = ";", dec=".", stringsAsFactors=F)
# load biomass MSY data
bmsy_data <- read.csv(
file = "data_tables/stocks.csv", header=T, stringsAsFactors=F, sep = ",")
bmsy_data$X.1 <- NULL
bmsy_data$X <- NULL
# merge cmsy thresholds with bmsy
sub_cmsy <- select(cmsy_data, stock, median.msy.)
# remove after ben re-runs
#sub_cmsy <- sub_cmsy[1:134,]
names(sub_cmsy) <- c("ASSESSID","C_msy")
sub_cmsy$C_msy <- sub_cmsy$C_msy* 1000
merged_df <- merge(bmsy_data, sub_cmsy, by= "ASSESSID", all.x=TRUE, all.y=FALSE)
# total number of stocks
num_stocks <- nrow(merged_df)
# make dataframe to record 0-1 for collapse, number of years collapsed
msy_collapse<- data.frame(matrix(NA, nrow=num_stocks, ncol=5))
colnames(msy_collapse)<-c(
"assessid", "if_collapse_cmsy","nyr_collapse_cmsy",
"if_collapse_bmsy", "nyr_collapse_bmsy")
msy_collapse$assessid <- unique(tms$ASSESSID)
##################################
# collapses
# write function to provide stock biomass threshold for collapse depending on
# whether we want from the catch or biomass msy.
find_collapse_threshold <- function(stock_id, type, msy_df){
# inputs: stock_id = assessID
#       : msy_df = data frame that contains msy values
#       : type = whether we use "catch_msy" or "biomass_msy",
if(type=="catch_msy"){
msy_value <- msy_df$C_msy[which(msy_df$ASSESSID==stock_id)]* .2
return(msy_value)
}
if(type=="biomass_msy"){
msy_value <- msy_df$B_msy[which(msy_df$ASSESSID==stock_id)] * .2
return(msy_value)
}
if(type!="catch_msy" & type!="biomass_msy"){
warning("the type of msy you put in is incorrect. it needs to be either 'biomass_msy' or 'catch_msy'")
}
}
identify_collapse <- function(type, df, tms, stock_id){
# check for collapse: pseudo code
#   make a time series of 0-1 if each year is below the collapse threshold
#   count how many years collapsed total
#   determine if collapse happens twice in a row
# type= looking for bmsy or cmsy collapse; num_stocks the number of stocks to loop through
# the appropriate dataframe for cmsy or bmsy; tms = time series from Ram Myers database
# subset stock info
tmp_tms <- subset(tms, ASSESSID %in% stock_id)
collapse_thresh <- find_collapse_threshold(stock_id, type, df)
# add column for timeseries of collapse
tmp_tms$collapse <- 0
# add 1s if TOTAL < collapse_thresh
tmp_tms$collapse[tmp_tms$TOTAL<collapse_thresh] <- 1
# any collapsed years twice in a row?
two_years = any(diff(cumsum(tmp_tms$collapse),lag=2)==2)
# if yes, at a 1 else 0
if_collapse <- ifelse(two_years==TRUE, 1, 0)
# record total number of years collapsed
nyear_collapse <- sum(tmp_tms$collapse)
return(list(if_collapse, nyear_collapse))
}
df = merged_df
for(i in 1:num_stocks){
type = "catch_msy"
msy_collapse[i,2:3] <- identify_collapse(type, df, tms, msy_collapse$assessid[i])
type = "biomass_msy"
msy_collapse[i,4:5] <- identify_collapse(type, df, tms, msy_collapse$assessid[i])
}
# merge collapse information to stock data_table
total_df <- merge(merged_df, msy_collapse, by.x = "ASSESSID", by.y="assessid")
## some graphing -- extra, should go to sandbox probably.
meh <- ddply(total_df, .(LME_NAME), summarize, cmsy_collapsed = sum(if_collapse_cmsy)/length(if_collapse_cmsy),
bmsy_collapsed=sum(if_collapse_bmsy)/length(if_collapse_bmsy))
barplot_df <- t(meh[,2:3])
colnames(barplot_df) <- meh[,1]
barplot(barplot_df, bor=F, beside = F, las=2)
write.csv(total_df, file="sandbox/cmsy_collapse.csv", row.names=FALSE)
head(merged_df)
head(sub_cmsy)
head(cmsy_data$median.msy.)
head(merged_df[,c("B_msy","C_msy")])
barplot(head(merged_df[,c("B_msy","C_msy")]))
length(is.na(merged_df$C_msy))
length(which(is.na(merged_df$C_msy)))
length(which(is.na(merged_df$B_msy)))
plot(merged_df$B_msy, merged_df$C_msy, pch=20)
plot(merged_df$B_msy, merged_df$C_msy, pch=20,xlim=c(0,2e17))
plot(merged_df$B_msy, merged_df$C_msy, pch=20,xlim=c(0,2e16))
plot(merged_df$B_msy, merged_df$C_msy, pch=20,xlim=c(0,2e15))
plot(merged_df$B_msy, merged_df$C_msy, pch=20,xlim=c(0,2e10))
plot(merged_df$B_msy, merged_df$C_msy, pch=20,xlim=c(0,2e2))
plot(merged_df$B_msy, merged_df$C_msy, pch=20,xlim=c(0,2e5))
sub_cmsy$C_msy <- sub_cmsy$C_msy* 10000
sub_cmsy <- select(cmsy_data, stock, median.msy.)
sub_cmsy <- select(cmsy_data, stock, median.msy.)
names(sub_cmsy) <- c("ASSESSID","C_msy")
sub_cmsy$C_msy <- sub_cmsy$C_msy* 10000
merged_df <- merge(bmsy_data, sub_cmsy, by= "ASSESSID", all.x=TRUE, all.y=FALSE)
plot(merged_df$B_msy, merged_df$C_msy, pch=20,xlim=c(0,2e5))
plot(merged_df$B_msy, merged_df$C_msy, pch=20)
hist(merged_df$C_msy)
hist(merged_df$C_msy,breaks=30)
hist(merged_df$C_msy,breaks=30,col="grey")
hist(merged_df$B_msy,breaks=30,col="grey")
hist(merged_df$B_msy,breaks=50,col="grey")
hist(merged_df$C_msy,breaks=30,col="grey")
hist(merged_df$B_msy,breaks=30,col="indianred",add=T)
hist(merged_df$C_msy,breaks=30,col="grey")
hist(merged_df$B_msy,breaks=50,col="indianred",add=T)
hist(merged_df$C_msy,breaks=30,col="grey")
hist(merged_df$B_msy,breaks=100,col="indianred",add=T)
hist(merged_df$B_msy,breaks=1000,col="indianred",add=T)
hist(merged_df$B_msy,breaks=10000,col="indianred",add=T)
hist(merged_df$B_msy,breaks=1000000,col="indianred",add=T)
hist(merged_df$B_msy,breaks=1000,col="indianred")
View(msy_collapse)
sum(msy_collapse$if_collapse_cmsy)
sum(msy_collapse$if_collapse_bmsy)
View(merged_df)
View(bmsy_data)
ln(62000)
pwd()
setwd("~/Box Documents/Documents/Projects/OSS2014/Regional_Collapse/original_data")
tmp_tms2 <- read.csv2('timeseries_values_view.csv')
View(tmp_tms2)
:q
:q
tmp_tms2 <- read.csv2('timeseries_values_view.csv')<- read.csv2(filename, header=T, sep = ",", dec=".")
mp_tms2 <- read.csv2('timeseries_values_view.csv' , header=T, sep = ",", dec=".")
mp_tms2
tmp_tms2 <- read.csv2('timeseries_values_view.csv' , header=T, sep = ",", dec=".")
View(tmp_tms2)
tmp_tms2$ASSESSID[AFSC-GHALBSAI-1960-2009-STANTON]
tmp_tms3 <- subset(tmp_tms2, ASSESSID="AFSC-GHALBSAI-1960-2009-STANTON")
ls(tmp_tms3)
max(tmp_tms3$TOTAL)
View(tmp_tms3)
View(msy_collapse)
View(merged_df)
max(merged_df$B_msy)
max(!is.na(merged_df$B_msy)_
max(!is.na(merged_df$B_msy))
merged_df$B_msy
print(merged_df$B_msy(where(!is.na(merged_df$B_msy)))
print(merged_df$B_msy(where(!is.na(merged_df$B_msy))))
print(merged_df$B_msy(where(!is.na(merged_df$B_msy))))
? ln
quit()
